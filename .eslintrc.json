{
  "env": {
    "node": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "@typescript-eslint",
    "prettier"
  ],
  "rules": {
    // Prettier integration
    "prettier/prettier": "warn",

    // TypeScript specific rules
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/explicit-module-boundary-types": "warn",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "warn",
    "@typescript-eslint/prefer-nullish-coalescing": "warn",
    "@typescript-eslint/prefer-optional-chain": "warn",
    "@typescript-eslint/strict-boolean-expressions": "off",

    // General best practices
    "no-console": "off",
    "no-debugger": "warn",
    "no-alert": "warn",
    "prefer-const": "warn",
    "no-var": "error",
    "eqeqeq": ["error", "always"],
    "curly": ["warn", "all"],
    "no-throw-literal": "error",
    "prefer-promise-reject-errors": "error",

    // Code quality
    "complexity": ["warn", 15],
    "max-depth": ["warn", 4],
    "max-lines-per-function": ["warn", { "max": 150, "skipBlankLines": true, "skipComments": true }],
    "max-params": ["warn", 5],

    // Import organization
    "sort-imports": [
      "warn",
      {
        "ignoreCase": true,
        "ignoreDeclarationSort": true
      }
    ],

    // Async/await best practices
    "require-await": "off",
    "@typescript-eslint/require-await": "warn",
    "no-return-await": "off",
    "@typescript-eslint/return-await": ["error", "in-try-catch"],

    // Error handling
    "no-empty": ["warn", { "allowEmptyCatch": false }],
    "@typescript-eslint/no-throw-literal": "error"
  },
  "ignorePatterns": [
    "node_modules/",
    "dist/",
    "build/",
    "cache/",
    "*.js"
  ]
}
